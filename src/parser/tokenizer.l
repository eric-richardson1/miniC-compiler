/* Author: Eric Richardson
 * Dartmouth CS57, Spring 2023
 * tokenizer.l - tokenizes the input "mini_c" program according to a
 * series of regular expressions specified in the 'RULES' section. Depends
 * on "y.tab.h", which is generated by "parser.y".
 */

/******************** DEFINITIONS ********************/
%{
    #include "../common/ast.h"
    #include <stdio.h>
    #include "y.tab.h"
%}
letter      [a-zA-Z]
digit       [0-9]

/******************** RULES ********************/
%%

"if"            {return IF;}
"else"          {return ELSE;}
"while"         {return WHILE;}
"int"           {return INT;}
"void"          {return VOID;}
"extern"        {return EXTERN;}
"return"        {return RETURN;}
"print"         {return PRINT;}
"read"          {return READ;}

"=="            {return EQ;}
">="            {return GEQ;}
"<="            {return LEQ;}
[-+*/(){}<>=;]  {return yytext[0];}

{letter}({letter}|{digit}|_)* {
    yylval.sval = strdup(yytext);
    return IDENTIFIER;
}

{digit}+ {
    yylval.ival = atoi(yytext);
    return NUM;
}

.|[ \t\n]
%%

/******************** SUBROUTINES ********************/
int yywrap() {
    return 1;
}
